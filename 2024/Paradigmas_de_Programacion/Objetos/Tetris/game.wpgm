import wollok.game.*
import tetraminos.*

object bagGenerator {
    var piezasDisponibles = self.nuevaBag()
    var piezaActual = null

    method nuevaBag() = [new PiezaI(), new PiezaJ(), new PiezaL(), new PiezaO(), new PiezaS(), new PiezaT(), new PiezaZ()].randomized()

    method nuevaPieza(){
        piezaActual = piezasDisponibles.first()
        piezasDisponibles.remove(piezaActual)

        //console.println(piezasDisponibles)
        
        if(piezasDisponibles.isEmpty())
        {
            piezasDisponibles = self.nuevaBag()
        }

        return piezaActual
    } 

}

program tetris {
    const cellSize = 32
    const gameWidth = 16
    const gameHeight = 24
    game.width(gameWidth)
    game.height(gameHeight)
    game.cellSize(cellSize)

    //game.boardGround("bkg2.png")
    game.title("Tetris Trainer")
    game.start()

    var piezaActual = bagGenerator.nuevaPieza()
    piezaActual.crear(piezaActual.bloques(), piezaActual.matRot())

    keyboard.enter().onPressDo({
        piezaActual.poner(piezaActual.bloques(), piezaActual.matRot())
        piezaActual = bagGenerator.nuevaPieza()
        piezaActual.actualizarPos(piezaActual.bloques(), piezaActual.matRot(), piezaActual.estadoRotacion())
        piezaActual.mostrar(piezaActual.bloques())
    })
    
    keyboard.right().onPressDo({piezaActual.movete(
        piezaActual.bloques(),
        piezaActual.matRot(),
        piezaActual.position().right(1))
    })
    keyboard.left().onPressDo({piezaActual.movete(
        piezaActual.bloques(),
        piezaActual.matRot(),
        piezaActual.position().left(1))
    })
    keyboard.down().onPressDo({piezaActual.movete(
        piezaActual.bloques(),
        piezaActual.matRot(),
        piezaActual.position().down(1))
    })
    keyboard.c().onPressDo({piezaActual.rotar(
        piezaActual.bloques(),
        piezaActual.matRot(),
        piezaActual.matKicks(),
        "derecha")
    })
    keyboard.x().onPressDo({piezaActual.rotar(
        piezaActual.bloques(),
        piezaActual.matRot(),
        piezaActual.matKicks(),
        "opuesto")
    })
    keyboard.z().onPressDo({piezaActual.rotar(
        piezaActual.bloques(),
        piezaActual.matRot(),
        piezaActual.matKicks(),
        "izquierda")
    })

    //game.onTick(1000, "movimiento", { piezaActual.bajar() })
}

